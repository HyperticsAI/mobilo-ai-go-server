# Build stage
FROM golang:1.24-alpine AS builder

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache git

# Copy go mod and sum files
COPY go.mod go.sum ./

# Copy the .env file
COPY .env .env

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the application with production flags
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-w -s" -o main .

# Final stage
FROM alpine:latest

# Add security updates and create non-root user
RUN apk --no-cache add ca-certificates && \
    adduser -D appuser

WORKDIR /app

# Copy the binary from builder
COPY --from=builder /app/main .
COPY --from=builder /app/.env .

# Use non-root user
USER appuser

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s \
  CMD wget -qO- http://localhost:8080/health || exit 1

# Run the application
CMD ["./main"] 